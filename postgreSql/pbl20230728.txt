SELECT oid, datname FROM pg_database;

show data_directory;
/*
public class WishVO {
	String goodsNum;
	Integer memberNum;
	Date wishDate;
}
create table wish(
	goodsNum varchar(60) not null,
	memberNum Integer,
	wishDate Date
);
*/
-- 만들어진 테이블 확인
SELECT * FROM PG_TABLES where schemaname ='public';

select *  from member;

insert into "member" (member_num, member_id, member_pw,
member_name, member_addr, member_addr2, member_post,
member_regi_date, member_gender, member_phone, member_email,
member_birth)
values('mem100003', 'highland1' , 'qwer1234',
'이상범', '성남',  null,  12345 , 
now(), 'F', '010-1234-1234', 'high', '2020-05-12' );


insert into "member" (member_id, member_name, member_addr, 
member_addr2, member_num, member_pw, member_post, 
member_regi_date, member_gender, member_phone, member_email,
member_birth, member_ok)
values ('highland4','김찬중','성남', '1111', 'mem100001',
'12334', 12345, now(), 'M', '010-1234-1234', 'gugu',
'2020-05-15', 'y');

--- not null인 컬럼은 꼭 값을 입력해야 한다.
-- null인 컬럼은 값을 입력하지 않아도 된다.
insert into member (member_num, member_id, member_pw,
member_name, member_regi_date, member_phone, member_email)
values('mem10005','highaa','1234','김찬중', now(), 
'010-1234-1234', 'hihyi');

insert into "member" -- 모든 컬럼에 컬럼 순서에 맞게 값을 대입
values('mem100003', 'highland1' , 'qwer1234',
'이상범', '성남',  null,  12345 , 
now(), 'F', '010-1234-1234', 'high', '2020-05-12' );

delete from member;

--- 컬럼 속성 변경
alter table "member" 
alter member_post type integer using member_post::integer;


-- 테이블 정보 확인 
select * from information_schema.columns
where table_name = 'member' order by column_name;


--- 데이터 조회
select * from member; --- * : 모든 컬럼
-- 일부 컬럼의 값만 가져오기 -- projection
select member_num , member_id , member_name  from member;

select member_name , member_addr , member_addr2 from member;

--- Top - n
select * from "member" 
limit 3;

--- Top -n에서 시작 점을 지정
select * from member
limit 3
offset 2;

-- 정렬
--- 오름차순
select * from member
order by member_num ; --- asc는 기본값이므로 생략 가능

select * from member
order by member_num asc ;

-- 내림차순
select  from "member" 
order by member_num desc; 

insert into "member" -- 모든 컬럼에 컬럼 순서에 맞게 값을 대입
values('mem100003', 'highland1' , 'qwer1234',
'이상범', '성남',  null,  12345 , 
now(), 'F', '010-1234-1234', 'high', '2020-05-22' );

select * from member; 

--- 정렬
select * from "member" 
order by member_num desc, member_birth ;

select * from "member" 
order by member_num , member_birth desc;

select * from "member" 
order by member_num asc, member_birth asc;

select * from "member" 
order by 1 asc, 12 asc;
select * from "member" 
order by 1 , 12 ;

select * from "member" 
order by 12 , 1 ;

--- projection : 원하는 열 데이터를 가지고 오는 것
--- selection : 원하는 행만 가지고 오는 것 , where 절 사용
select member_num , member_id , member_name  from "member"
where member_num  = 'mem100001';

select member_num , member_id , member_name  from "member"
where member_regi_date = '2023-07-28';

select now() ;
select 1 + 1;

select member_num , member_id , member_name  from "member"
where member_regi_date <> '2023-07-28';

select * from member;

select * from "member" 
where member_birth >= '2020-05-14';

select * from "member" 
where member_birth > '2020-05-14';

--- 컬럼에 별칭 주기
select member_num as m_num, member_id as m_id , 
member_pw m_pw, member_name m_nam from "member" 

select member_post * 12 as sal_year  from "member";

select (member_post + 100) * 12 as sal_year from "member"

select member_num || ' ' || member_name as mem from member;

--- 테이블 복사하기
create table member2
as
select * from member; -- 모두 복사

select * from "member2"

drop table  member2;

create table member2
as 
select * from member 
where 1=1;

select * from member2;

drop table  member2;

create table member2
as 
select * from member 
where 1<>1;

select * from member2;
drop table member2;


create table member2
as
select * from "member" 
order by 1 , 12 ;
rollback;

-- select * from member;
--- 테이블명 변경 하기 
alter table member2 rename to member;
select * from member;


select * from member where member_addr2 = null; -- X

select * from member where member_ok isnull ;

select * from member where member_ok is not null;

--- 데이터 수정
--- selection
select * from "member" 
where member_num  = 'mem100001';

update "member" 
set member_name = '이장범'
where member_num  = 'mem100001'

select * from "member" 

update "member" 
set member_name = '김찬중'


select * from "member" 
where member_num ='mem100001' 
and member_birth  = '2020-05-14';

update "member" 
set member_name = '이숭무'
where member_num ='mem100001' 
and member_birth  = '2020-05-14';

select * from member;

select * from "member" 
where member_num ='mem100001' 
and member_birth  = '2020-05-13';

update "member" 
set member_name = '이상범',
	member_id = 'high',
	member_addr ='서울'
where member_num ='mem100001' 
and member_birth  = '2020-05-13'
returning *; -- 수정한 내용 조회

-- 데이터 삭제
select * from "member" 
where member_num = 'mem100001';

delete from "member" 
where member_num = 'mem100001';

select * from "member" 
where member_num = 'mem100002'
and member_birth = '2023-05-17';

delete from "member" 
where member_num = 'mem100002'
and member_birth = '2023-05-17';

delete from member;

/*************************************************/

create table test1(
	a serial,
	b integer
);

insert into test1(b)
values(1);

select * from test1;

insert into test1(b)
values(2);

select * from test1;

insert into test1(b)
values(5);

select * from test1;

insert into test1(a,b)
values(4,6);

select * from test1;

insert into test1(b)
values(7);

select * from test1;


create table datetime_study(
	type_ts timestamp, --- ms
	type_date date,    --- 년월일시분초
	type_time time     --- 시분초
);

insert into datetime_study
values('2020-07-10 10:00:25+9' , '2020-10-25 10:30:30',
		'10:20:30');
select * from datetime_study;

show timezone;

create table test3(
	e_name varchar(30),
	e_age varchar(3),
	salary integer,
	birth date
);
insert into test3
values('이숭무', '35', '20000', '2023-10-12');

select * from test3;

select cast(e_age as integer) - 2  from test3;
select (salary + 100) * 12 from test3; 

select e_name || '의 생일은 ' || birth || '입니다.' from test3;
select e_name || '의 생일은 ' || 
		cast(birth as varchar) || '입니다.' from test3;
select e_name || '의 생일은 ' || 
		cast(birth as text) || '입니다.' from test3;

select cast('2023-10-25' as date) - 1;
select '2023-10-25'::date -1;
