<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCShopping.mapper.GoodsMapper">
<delete id="productsDelete" parameterType="string">
delete from goods
where goods_num in
	<foreach collection="products" item="goodsNum" open="(" close=")" 
		index="index" separator=",">
		#{goodsNum}
	</foreach>
</delete>



<select id="goodsCount" parameterType="string" resultType="integer">
	select count(*) from goods
	<where>
		<if test="searchWord != null">
			goods_name like '%' || #{searchWord} || '%'
			or goods_num like '%' || #{searchWord} || '%'
		</if>
	</where>
</select>

<select id="goodsAutoNum" resultType="string">
select
concat('gd' , coalesce(max(substr(goods_num,3))::integer,1000000) + 1)
from goods
</select>

<delete id="goodsDelete" parameterType="string">
delete from goods
where goods_num = #{goodsNum}
</delete>
<update id="goodsUpdate" parameterType="goods"> 
update goods
set GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice}
	,delivery_cost =#{deliveryCost}, GOODS_CONTENT = #{goodsContent}
    ,update_emp_num = #{updateEmpNum}, goods_update_date = now()
where goods_num = #{goodsNum}
</update>


<resultMap type="goods" id="goodsResultMap">
<!-- dto의 setter를 이용하는 방법 -->
<!--  id는 primary 컬럼 , results는 일반 컬럼-->
	<id column="goods_Num" jdbcType="VARCHAR" property="goodsNum"/>
	<result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
	<result column="goods_price" jdbcType="BIGINT" property="goodsPrice"/>
	<result column="goods_content" jdbcType="VARCHAR" property="goodsContent"/>
	<result column="delivery_cost" jdbcType="BIGINT" property="deliveryCost"/>
	<result column="emp_num" jdbcType="VARCHAR" property="empNum"/>
	<result column="goods_regist" jdbcType="DATE" property="goodsRegist"/>
	<result column="goods_main_store" jdbcType="VARCHAR" property="goodsMainStore"/>
	<result column="goods_main_store_img" jdbcType="VARCHAR" property="goodsMainStoreImg"/>
	<result column="goods_images" jdbcType="VARCHAR" property="goodsImages"/>
	<result column="goods_images_img" jdbcType="VARCHAR" property="goodsImagesImg"/>
	<result column="visit_count" jdbcType="BIGINT" property="visitCount"/>
	<result column="update_Emp_Num" jdbcType="VARCHAR" property="updateEmpNum"/>
	<result column="goods_Update_Date" jdbcType="DATE" property="goodsUpdateDate"/>
</resultMap>
<sql id="goodsColumnsBase">
	   goods_Num , goods_name , goods_price ,goods_content , delivery_cost , emp_num  
	  ,goods_regist , goods_main_store ,goods_main_store_img , goods_images 
	  ,goods_images_img , visit_count ,update_Emp_Num , goods_Update_Date
</sql>

<select id="selectOne" parameterType="string" resultMap="goodsResultMap">
select <include refid="goodsColumnsBase" />
from goods  
where goods_Num = #{goodsNum}
</select>

<select id="allSelect" resultType="goods" parameterType="startEndPageDTO">
select * from (
	select ROW_NUMBER() over (order by goods_num) as rn,
		   goods_Num goodsNum, goods_name goodsName, goods_price goodsPrice 
		  ,goods_content goodsContent, delivery_cost deliveryCost, emp_num empNum 
		  ,goods_regist goodsRegist, goods_main_store goodsMainStore 
		  ,goods_main_store_img goodsMainStoreImg, goods_images goodsImages
		  ,goods_images_img goodsImagesImg, visit_count visitCount
		  ,update_Emp_Num updateEmpNum, goods_Update_Date goodsUpdateDate
	from goods
	<where>
		<if test="searchWord != null">
			goods_name like '%' || #{searchWord} || '%'
			or goods_num like '%' || #{searchWord} || '%'
		</if>
	</where>
	) sub1
where rn between #{startRow}  and #{endRow}
</select>

<insert id="goodsInsert" parameterType="goods">
insert into goods ( <include refid="goodsColumnsBase" /> )
values(#{goodsNum}, #{goodsName}, #{goodsPrice}, #{goodsContent}
		, #{deliveryCost}, #{empNum}, now() 
	  	, '1','1','1','1',0,null,null)
</insert>
</mapper>