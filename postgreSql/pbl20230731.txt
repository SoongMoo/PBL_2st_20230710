create table contract_info(
	id integer,
	e_name varchar(20),
	tel varchar(13),
	email varchar(15)
);

insert into contract_info(id,tel,email)
values(10,'031', 'high');

select * from contract_info;


drop table if exists contract_info;

create table contract_info(
	id integer not null ,
	e_name varchar(20) not null,
	tel varchar(13),
	email varchar(15)
);

insert into contract_info(id,tel,email, e_name)
values(10,'031', 'high','이숭무');

select * from contract_info;

insert into contract_info(tel,email, e_name, id)
values('031', 'high','이숭무', 20);



select * from contract_info;

delete from contract_info;

insert into contract_info(tel,email, e_name, id)
values('031', 'high','이숭무', 10);

select * from contract_info;

--- entity 무결성
drop table if exists contract_info;

create table contract_info(
	id integer primary key, -- not null
	ename varchar(20) not null,
	tel varchar(13) not null,
	email varchar(50)
);
/*
insert into contract_info(ename, tel)
values('이숭무', '031');
*/
insert into contract_info(id, ename, tel)
values(10, '이숭무', '031');

select * from contract_info;

insert into contract_info(id, ename, tel)
values(20, '이숭무', '031');
select * from contract_info;

drop table if exists contract_info;
create table contract_info(
	num varchar(10) primary key, -- not null
	id integer  unique,
	ename varchar(20) not null,
	email varchar(40)
);
insert into contract_info(num, ename, email)
values('sm09' , '이장범', 'hi');
insert into contract_info(num, ename, email)
values('sm08', '이상범', 'land');

insert into contract_info(num , id, ename)
values('sm10', 10, '이숭무');

insert into contract_info(num , id, ename, email)
values('sm11', 10, '이숭무','high'); 
select * from contract_info;

drop table if exists contract_info;
create table contract_info(
	num varchar(30) not null primary key,
	id integer not null unique,
	ename varchar(20) not null,
	tel varchar(13) ,
	email varchar(30) null unique
);
insert into contract_info(num, id, ename)
values('sm01', 10, '이숭무');
insert into contract_info(num, id, ename, email)
values('sm02', 20, '이상범', null);
insert into contract_info(num ,id, ename,email)
values('sm03', 30, '이장범', 'hi');
insert into contract_info(num ,id, ename,email)
values('sm04', 40, '김찬중', 'hi');
select * from contract_info;

drop table if exists contract_info;
-- 열레벨 
create table contract_info(
	num varchar(20) constraint num_nn not null 
		constraint num_pk primary key,
	id integer not null 
		constraint id_uu unique,
	ename varchar(30) not null,
	tel varchar(30) ,
	email varchar(40) 
		constraint email_uu unique 
);
insert into contract_info(num, id, ename, email)
values('sm01',10,'이숭무',null);
insert into contract_info(num, id, ename, email)
values('sm01',20,'이숭무',null);

drop table if exists contract_info;
-- 테이블 레벨
create table contract_info(
	num varchar(30) not null,
	id integer not null,
	ename varchar(30) not null,
	tel varchar(13) ,
	email varchar(30),
	/*constraint num_nn not null (num)*/
	constraint num_pk primary key(num),
	constraint id_uu unique(id),
	constraint email_uu unique(email)
);

alter table contract_info
drop CONSTRAINT email_uu;
/*************************************/
--- 테이블레벨
drop table if exists contract_info;
create table contract_info(
	num varchar(20) not null,
	id integer constraint id_nn not null,
	ename varchar(30) not null,
	tel varchar(13) not null,
	email varchar(50)
);

alter table contract_info
add constraint num_pk primary key(num),
add	constraint id_uu unique(id),
add constraint email_uu unique(email);

alter table contract_info
drop CONSTRAINT email_uu;

alter table contract_info
drop constraint id_uu,
drop constraint num_pk;

----- 참조 무결성
drop table if exists aa;
create table aa( --- 부모 테이블
	a integer primary key,
	b integer
);
drop table if exists bb;
create table bb( -- 자식 테이블
	b1 integer,
	c1 integer,
	a integer references aa(a)
);
insert into aa values(1 ,2);
insert into bb values(1,2,1);
select * from bb;
select * from aa;
-- delete from aa; --오류 
--자식테이블에서 참조하고 있는 경우 부모테이블 데이터는 삭제할 수 없다.
insert into aa values(2 ,4);
select * from bb;
select * from aa;
delete from aa where a = 2;

delete from bb where a = 1;
delete from aa where a = 1;
select * from bb;
select * from aa;

-- 부모테이블의 데이터를 삭제하면 자식 테이블 데이터도 같이 삭제
-- 식별관계
drop table if exists aa;
create table aa( --- 부모 테이블
	a integer primary key,
	b integer
);
drop table if exists bb;
create table bb( -- 자식 테이블
	b1 integer,
	c1 integer,
	a integer references aa(a) on delete cascade 
);
insert into aa(a, b) values(1,2);
insert into bb(b1, c1, a) values(3,4,1);
select * from aa;
select * from bb;
delete from aa where a = 1;
select * from aa;
select * from bb;

-- 부모테이블의 데이터를 삭제 할 때 부모만 삭제되고 자식은 보존
-- 비식별관계
drop table if exists aa;
create table aa( --- 부모 테이블
	a integer primary key,
	b integer
);
drop table if exists bb;
create table bb( -- 자식 테이블
	b1 integer,
	c1 integer,
	a integer references aa(a) on delete set null 
);
insert into aa(a, b) values(1,2);
insert into bb(b1, c1, a) values(3,4,1);
select * from aa;
select * from bb;
delete from aa where a = 1;
select * from aa;
select * from bb;

create table aa(
	a integer constraint a_pk primary key ,
	b integer
);
create table aa(
	a integer,
	b integer,
	constraint a_pk primary key(a)
);
create table aa(
	a integer,
	b integer
);
/*
alter table aa 
alter column a constraint a_pk primary key(a);
*/
alter table aa
drop constraint if exists a_pk;
alter table aa
add constraint a_pk primary key(a);

create table bb( -- 자식 테이블
	b1 integer constraint b1_pk primary key,
	c1 integer,
	a integer constraint a_fk 
	references aa(a) on delete set null 
);
drop table if exists bb;
create table bb( -- 자식 테이블
	b1 integer,
	c1 integer,
	a integer ,
	constraint a_fk foreign key (a)
	references aa(a) on delete set null ,
	constraint b1_pk primary key(b1)
);
---- 현장
-- table script
drop table if exists aa;
create table aa( --- 부모 테이블
	a integer,
	b integer not null
);
drop table if exists bb;
create table bb( -- 자식 테이블
	b1 integer,
	c1 integer not null,
	a integer null
);
drop table if exists cc;
create table cc(
	cc1 integer,
	dd1 integer,
	d integer
);
---- primary key script
alter table aa 
add constraint a_pk primary key(a);
alter table bb
add constraint b1_pk primary key(b1);
alter table cc 
add constraint cc1_pk primary key(cc1),
add constraint dd1_uu unique (dd1);
---- foreign key script
alter table bb 
add constraint a_fk foreign key(a)
    references aa(a) on delete cascade ;
alter table cc 
add constraint d_fk foreign key(d)
	references aa(a) on delete set null;
 
insert into aa values(1,2);
insert into bb values(4,5,1);
insert into cc values(6,7,1);
select * from aa;
select * from bb;
select * from cc;
delete from aa;

create table test01(
	a integer,
	b integer
);
insert into test01(a)  values(1);
select * from test01;
--- b컬럼에 not null
alter table test01
alter column b set not null; -- null 이 있으면  안됨
delete from test01;
alter table test01
alter column b set not null;

--- 컬럼 추가
alter table test01
add column c integer not null;
select * from test01;

--- 커럼삭제
alter table test01
drop column b;

select * from test01;

--- 이름 변경
alter table test01
rename column c to b;
select * from test01;

insert into test01 values(1);
--- not null 제거
alter table test01
alter column b drop not null;
insert into test01 values(1);
select * from test01;

--- 컬럼의 데이터 타입 변경
alter table test01
alter column b type varchar(20);

alter table test01 
alter column b type integer using b::integer;

-- 참조 컬럼 삭제하기
create table teat02(
	a integer primary key,
	b integer
);

create table test03(
	c integer primary key,
	d integer references teat02(a)
);
alter table teat02 
drop column a cascade; --test03에 있는 참조키도 삭제
select * from teat02;
select * from test03;
--- 제약조건
--- 참조 무결성 : foreign key
--- entity 무결성 : primary key, unique
--- 도메인 무결성 : 데이터 타입이나 크기가 일치하는 것
---              check, default
create  table test04(
	a integer,
	b integer check (b > 10)
);
---insert into test04  values(1,1);
insert into test04 values ( 1, 11);
select * from test04;
create table test05(
	a integer,
	b integer check (b >10),
	c integer check (c < b)
);
--insert into test05 values(1, 11, 20);
insert into test05 values(1, 11, 9);
select * from test05;

drop table if exists test06;
create table test06(
	a integer,
	b varchar(30) check (b in ('서울','대구','대전','부산') )
);
insert into test06 values(1,'부산'); 
select * from test06;
drop table if exists test07;
create table test07(
	a integer,
	name1 varchar(30) check (name1 similar to '[a-f]%')
);
insert into test07 values(1, 'abcdef');
insert into test07 values(1, 'a');
insert into test07 values(1, 'a0001');
select * from test07;

drop table if exists test11;
create table test11(
	a integer,
	name1 varchar(30) CHECK (name1 ~ 
	'^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-+]).{8,}$')
);
insert into test11 values(1, 'qwer!234');

create table test08(
	a integer,
	b integer constraint b_ck check(b >10)
);
create table test09(
	a integer,
	b integer,
	constraint b_ck check(b >10)
);
create table test10(
	a integer,
	b integer
);
alter table test10
add constraint b_ck check(b >10);
