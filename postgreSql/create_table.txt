데이터베이스 위치 : show data_directory;
데이터베이스파일 위치 : SELECT oid, datname FROM pg_database;
select * from information_schema.tables
where table_schema = 'public' order by table_name;

select * from information_schema.columns
where table_name = 'member' order by column_name


CREATE TABLE regions
    ( region_id      integer  CONSTRAINT  region_id_nn NOT NULL 
    , region_name    VARCHAR(25) 
);

CREATE TABLE countries 
    ( country_id      CHAR(2)  CONSTRAINT  country_id_nn NOT NULL 
    , country_name    VARCHAR(40) 
    , region_id       integer 
    , CONSTRAINT     country_c_id_pk 
        	     PRIMARY KEY (country_id) 
    ) 


CREATE TABLE locations
    ( location_id    integer
    , street_address VARCHAR(40)
    , postal_code    VARCHAR(12)
    , city       VARCHAR(30)	CONSTRAINT     loc_city_nn  NOT NULL
    , state_province VARCHAR(25)
    , country_id     CHAR(2)
) ;


CREATE TABLE departments
    ( department_id    integer
    , department_name  VARCHAR(30) CONSTRAINT  dept_name_nn  NOT NULL
    , manager_id      integer
    , location_id       integer
    ) ;

CREATE TABLE jobs
    ( job_id         VARCHAR(10)
    , job_title      VARCHAR(35) CONSTRAINT     job_title_nn  NOT NULL
    , min_salary     integer
    , max_salary     integer
    ) ;

CREATE TABLE employees
    ( employee_id   integer
    , first_name     VARCHAR(20)
    , last_name      VARCHAR(25)	 CONSTRAINT     emp_last_name_nn  NOT NULL
    , email          VARCHAR(25)	CONSTRAINT     emp_email_nn  NOT NULL
    , phone_number   VARCHAR(20)
    , hire_date      DATE CONSTRAINT     emp_hire_date_nn  NOT NULL
    , job_id         VARCHAR(10) CONSTRAINT     emp_job_nn  NOT NULL
    , salary        numeric(8,2)
    , commission_pct numeric(2,2)
    , manager_id     integer
    , department_id  integer
    , CONSTRAINT     emp_salary_min
                     CHECK (salary > 0) 
    , CONSTRAINT     emp_email_uk
                     UNIQUE (email)
    ) ;


CREATE TABLE job_history
    ( employee_id   integer CONSTRAINT    jhist_employee_nn  NOT NULL
    , start_date    DATE	CONSTRAINT    jhist_start_date_nn  NOT NULL
    , end_date      DATE      CONSTRAINT    jhist_end_date_nn  NOT NULL
    , job_id        VARCHAR(10) CONSTRAINT    jhist_job_nn  NOT NULL
    , department_id integer 
    , CONSTRAINT    jhist_date_interval  CHECK (end_date > start_date)
    ) ;

ALTER TABLE job_history
ADD  CONSTRAINT jhist_emp_id_st_date_pk
      PRIMARY KEY (employee_id, start_date);

ALTER TABLE employees
ADD CONSTRAINT     emp_emp_id_pk
                     PRIMARY KEY (employee_id)
;

ALTER TABLE regions
ADD  CONSTRAINT reg_id_pk PRIMARY KEY (region_id);

ALTER TABLE jobs
ADD  CONSTRAINT job_id_pk PRIMARY KEY(job_id) ;

ALTER TABLE locations
ADD  CONSTRAINT loc_id_pk
       		 PRIMARY KEY (location_id) ;


ALTER TABLE departments
ADD ( CONSTRAINT dept_id_pk
       		 PRIMARY KEY (department_id)
;

alter table job_history
add CONSTRAINT     jhist_job_fk
                     FOREIGN KEY (job_id)
                     REFERENCES jobs
    , 
add CONSTRAINT     jhist_emp_fk
                     FOREIGN KEY (employee_id)
                     REFERENCES employees
    , 
add CONSTRAINT     jhist_dept_fk
                     FOREIGN KEY (department_id)
                     REFERENCES departments
    ;

ALTER TABLE departments
ADD  CONSTRAINT dept_mgr_fk
      		 FOREIGN KEY (manager_id)
      		  REFERENCES employees (employee_id);

alter table employees
add CONSTRAINT     emp_dept_fk
                     FOREIGN KEY (department_id)
                      REFERENCES departments
    , 
add CONSTRAINT     emp_job_fk
                     FOREIGN KEY (job_id)
                      REFERENCES jobs (job_id)
    , 
add CONSTRAINT     emp_manager_fk
                     FOREIGN KEY (manager_id)
                      REFERENCES employees
 ; 

alter table locations
add CONSTRAINT loc_c_id_fk
       		 FOREIGN KEY (country_id)
        	  REFERENCES countries(country_id);

ALTER TABLE countries
ADD  CONSTRAINT countr_reg_fk
        	 FOREIGN KEY (region_id)
          	  REFERENCES regions(region_id) 
     ;

ALTER TABLE departments
add  CONSTRAINT dept_loc_fk
       		 FOREIGN KEY (location_id)
        	  REFERENCES locations (location_id);
